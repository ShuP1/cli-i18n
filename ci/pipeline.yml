---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: slack-attachment-resource
  type: docker-image
  source:
    repository: cfcli/slack-attachment-resource
    tag: latest

resources:
- name: dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-i18n
    branch: master
    paths: [ci/image/Dockerfile]

- name: base-image
  type: docker-image
  source:
    repository: cfcli/i18n-base
    username: ((dockerhub-username))
    email: ((dockerhub-email))
    password: ((dockerhub-password))

- name: cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    ignore_paths:
    - ci
    - integration

- name: cli-i18n
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-i18n
    branch: master
    private_key: ((cli-i18n-github-private-key))
    trigger: true

- name: golang
  type: docker-image
  source:
    repository: golang
    tag: latest

- name: fork
  type: git
  source:
    uri: git@github.com:cf-cli-eng/cli-i18n.git
    branch: master
    private_key: ((fork-private-key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: slack-attachment
  type: slack-attachment-resource
  source:
    group_id: ((slack-group-id))
    filename: translations.zip
    token: ((slack-token))

- name: upload-translation-zip
  type: s3
  source:
    bucket: cf-cli-i18n
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: all.json.zip
    region_name: ap-southeast-1

groups:
- name: translations
  jobs:
  - extract-i18n
  - merge-submitted-translations
- name: images
  jobs:
  - create-base-image

jobs:
- name: extract-i18n
  serial: true
  plan:
  - aggregate:
    - get: cli
    - get: cli-i18n
  - do:
    - task: extract-i18n
      file: cli-i18n/ci/tasks/generate-i18n-json.yml
    - task: package-i18n
      file: cli-i18n/ci/tasks/package-i18n-json.yml
    - put: upload-translation-zip
      params:
        file: outputs/all.json.zip
    on_failure:
       put: slack-alert
       params:
         channel: ((slack-group-name))
         text: "extract i18n JSON failed :("
    on_success:
      put: slack-alert
      params:
        channel: ((slack-group-name))
        text: |
          NEW i18n JSON files ready for translation: https://s3-ap-southeast-1.amazonaws.com/cf-cli-i18n/all.json.zip

- name: merge-submitted-translations
  serial: true
  plan:
  - aggregate:
    - get: cli-i18n
    - get: slack-attachment
      trigger: true
  - task: extract-and-verify-translations
    file: cli-i18n/ci/tasks/extract-and-verify-translations.yml
    on_failure:
       put: slack-alert
       params:
         channel: ((slack-group-name))
         text_file: validation-output/out.txt
         text: |
           The uploaded json in translations.zip contained an error:

           ```
           $TEXT_FILE_CONTENT
           ```
  - do:
    - task: commit-changes
      file: cli-i18n/ci/tasks/commit-changes.yml
    - put: fork
      params:
        repository: fork
        force: true
    - task: create-pull-request
      file: cli-i18n/ci/tasks/create-pull-request.yml
      params:
        GITHUB_TOKEN: ((github-user-token))
    on_failure:
       put: slack-alert
       params:
         channel: ((slack-group-name))
         text: |
           An error occured while trying to create the pull requests for the given set of translations: https://wings.pivotal.io/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_success:
       put: slack-alert
       params:
         channel: ((slack-group-name))
         text_file: hub-output/link.txt
         text: |
           Submitted a pull request to cli-i18n: $TEXT_FILE_CONTENT

- name: create-base-image
  serial: true
  plan:
  - aggregate:
    - get: golang
      trigger: true
      params:
        save: true
    - get: dockerfile
      trigger: true
  - put: base-image
    params:
      load_base: golang
      build: dockerfile/ci/image
